name: Build and Deploy React App

on:
  workflow_call:
    inputs:
      s3-bucket-name:
        required: true
        type: string
      app-directory:
        required: false
        type: string
      aws-region:
        required: false
        type: string
        default: 'eu-central-1'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          lfs: true

      # - name: List public directory
      #   run: |
      #     echo "Listing contents of the public directory"
      #     ls -alh public/

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      # - name: Check for existing homepage
      #   id: homepage-check
      #   run: |
      #     if grep -q '"homepage":' package.json; then
      #       echo "homepage_exists=true" >> $GITHUB_OUTPUT
      #     else
      #       echo "homepage_exists=false" >> $GITHUB_OUTPUT
      #     fi

      # - name: Add homepage to package.json
      #   if: steps.homepage-check.outputs.homepage_exists == 'false'
      #   run: |
      #     HOMEPAGE_URL="http://${{ inputs.s3-bucket-name }}.s3-website.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.app-directory }}/"
      #     echo "Inserting homepage URL: $HOMEPAGE_URL into package.json"
      #     sed -i "/\"private\": true/a\  \"homepage\": \"$HOMEPAGE_URL\"," package.json
        
      - name: Build React app
        run: npm run build

      - name: List build directory
        run: |
          echo "Listing contents of the build directory..."
          ls -alh dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ inputs.s3-bucket-name }}/${{ inputs.app-directory }}/ --delete

      - name: Provide App URL
        run: |
          APP_URL="http://${{ inputs.s3-bucket-name }}.s3-website.${{ inputs.aws-region }}.amazonaws.com/${{ inputs.app-directory }}/"
          echo "App URL: $APP_URL"
          echo "app_url=$APP_URL" >> $GITHUB_ENV
